# Configuration for local development: Copy this file to application-local.properties,
# substitute all environmental variables with values of your choice, and run maven with
#
# mvn -Dspring.profiles.active=local <your-maven-commands>
#
server.port = ${SERVER_PORT:8999}
debug = ${APP_DEBUG:true}  			# true, false
spring.datasource.username = ${DB_USERNAME}
spring.datasource.password = ${DB_PASSWORD}
spring.datasource.url = ${DB_URL}

spring.datasource.driver-class-name = org.postgresql.Driver
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.naming.strategy = org.hibernate.cfg.ImprovedNamingStrategy
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = validate

spring.application.name = epaper-api
spring.jmx.default-domain = epaper-api
logging.level.org.springframework.boot.autoconfigure = INFO
logging.level.it.noi.edisplay = DEBUG

#proxy config
proxy.enabled =  ${PROXY_ENABLED:true}
proxy.url =  ${PROXY_URL:http://localhost:5000}

#websocket-config
websocket.enabled = ${WEBSOCKET_ENABLED:true}

# cron schedule for fetching events of NOI from OpenDataHub
cron.enabled = ${NOI_EVENTS_ENABLED:false}
cron.opendata.events = ${NOI_CRON_EVENTS:0 0 0/12 * * ?}
cron.opendata.locations = ${NOI_CRON_EVENTS:0 0 0/12 * * ?}
cron.heartbeat=${CRON_HEARTBEAT:0 0 0/1 * * ?}

# File upload (default is 1MB)
spring.servlet.multipart.max-file-size=30MB
spring.servlet.multipart.max-request-size=30MB

# AWS
aws.credentials.accessKey=${S3_ACCESS_KEY}
aws.credentials.secretKey=${S3_SECRET_KEY}
aws.bucket.fileImport=${S3_BUCKET_NAME}
aws.s3.region=${S3_REGION}
